message(STATUS "Adding validation examples")

if(CMAKE_C_COMPILER_ID STREQUAL "GNU" 
    OR CMAKE_Fortran_COMPILER_ID STREQUAL "GNU" 
    OR CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    message(WARNING "Cannot compile OpenMP examples with GNU compilers. Please use LLVM or Intel compilers.")
endif()

include(FindOpenMP)
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} ${OpenMP_Fortran_FLAGS}")

message(STATUS "CMAKE_C_FLAGS=${CMAKE_C_FLAGS}")
message(STATUS "OpenMP_CXX_FLAGS=${OpenMP_CXX_FLAGS}")
message(STATUS "OpenMP_Fortran_FLAGS=${OpenMP_Fortran_FLAGS}")

message(STATUS "Adding validators:")

function(add_validator_omp SRC)
    set(ABS_SRC ${PROJECT_SOURCE_DIR}/src/otter/examples/omp/omp-${SRC}.c)
    cmake_path(GET ABS_SRC STEM EX_NAME)
    set(EX_NAME otter-validator-${EX_NAME})
    message(STATUS "Adding OpenMP validator: ${EX_NAME}")
    add_executable(${EX_NAME} ${ABS_SRC})
    install(TARGETS ${EX_NAME})
endfunction()

function(add_validator_serial SRC)
    set(ABS_SRC ${PROJECT_SOURCE_DIR}/src/otter/examples/serial/serial-${SRC}.c)
    cmake_path(GET ABS_SRC STEM EX_NAME)
    set(EX_NAME otter-validator-${EX_NAME})
    message(STATUS "Adding serial validator: ${EX_NAME}")
    add_executable(${EX_NAME} ${ABS_SRC})
    target_include_directories(${EX_NAME} PRIVATE ${PROJECT_SOURCE_DIR}/include)
    target_link_libraries(${EX_NAME} otter-serial)
    install(TARGETS ${EX_NAME})
endfunction()

add_validator_serial(empty)
add_validator_serial(loop)
add_validator_serial(fib)
add_validator_serial(taskwait-some)
add_validator_serial(taskwait-descendants)
add_validator_serial(taskgroup-some)
add_validator_serial(single)
add_validator_serial(phases)
add_validator_serial(phases-and-tasks)

add_validator_omp(parallel)
add_validator_omp(parallel-nested)
add_validator_omp(parallel-single)
add_validator_omp(parallel-sequence-of-n)
add_validator_omp(fibonacci)
add_validator_omp(master)
add_validator_omp(taskgroup)
add_validator_omp(taskloop)
add_validator_omp(single-taskwait-after)
add_validator_omp(single-taskwait-inside)
add_validator_omp(taskgroup-and-single)
add_validator_omp(taskloop-and-taskgroup)
add_validator_omp(taskgroup-parallel)
